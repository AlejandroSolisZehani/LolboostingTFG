{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aszerk\\\\Desktop\\\\lolboostingTFG\\\\lolboosting\\\\src\\\\Paginas\\\\Usuarios\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (localStorage.getItem(\"IdUsuario\") || localStorage.getItem(\"TokenUsuario\")) {\n      navigate(\"/\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email_usuario: '',\n        contraseña_usuario: ''\n      },\n      validationSchema: Yup.object({\n        email_usuario: Yup.string().required(\"Es obligatorio poner el correo para iniciar sesion\").email(\"Ha de ser un correo\"),\n        contraseña_usuario: Yup.string().required(\"Has de poner una contraseña para iniciar sesion\")\n      }),\n      onSubmit: (values, actions) => {\n        console.log(values);\n        axios.post(\"/usuarios\", values).then(res => {\n          console.log(res);\n\n          if (res.status === 200) {\n            toast.success(\"Te has resgistrado correctamente\", {\n              duration: 2500\n            });\n            const login = {\n              email: values.email_usuario,\n              contraseña: values.contraseña_usuario\n            };\n            axios.post(\"/login\", login, {\n              headers: {\n                \"x-access-token\": `${res.data.token}`\n              }\n            }).then(res => {\n              console.log(res);\n              toast.success(\"Has iniciado sesion correctamente\", {\n                duration: 2500\n              });\n              localStorage.setItem(\"TokenUsuario\", res.data.token);\n              localStorage.setItem(\"IdUsuario\", res.data.id.id);\n              const objeto = {};\n              localStorage.setItem(\"Carrito\", JSON.stringify(objeto));\n              console.log(JSON.parse(localStorage.getItem(\"Carrito\")));\n              navigate(\"/\");\n            }).catch(error => {\n              toast.error(error);\n            });\n          } else {\n            toast.error(\"Algo salio mal\");\n          }\n        }).catch(error => {\n          toast.error(\"El correo electronico o el numero de telefonos ya estan registrados en otra cuenta\");\n          console.log(error);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","axios","Yup","useNavigate","toast","Formik","Form","Field","ErrorMessage","Login","navigate","localStorage","getItem","email_usuario","contraseña_usuario","object","string","required","email","values","actions","console","log","post","then","res","status","success","duration","login","contraseña","headers","data","token","setItem","id","objeto","JSON","stringify","parse","catch","error"],"sources":["C:/Users/Aszerk/Desktop/lolboostingTFG/lolboosting/src/Paginas/Usuarios/Login.js"],"sourcesContent":["import React, {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport toast from 'react-hot-toast'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nexport default function Login() {\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"IdUsuario\")||localStorage.getItem(\"TokenUsuario\")){\r\n      navigate(\"/\")\r\n    }\r\n  }, []); \r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n      initialValues={{\r\n        email_usuario: '',\r\n        contraseña_usuario: ''\r\n      }}\r\n      validationSchema={Yup.object({\r\n        email_usuario: Yup.string().required(\"Es obligatorio poner el correo para iniciar sesion\").email(\"Ha de ser un correo\"),\r\n        contraseña_usuario: Yup.string().required(\"Has de poner una contraseña para iniciar sesion\")\r\n      })\r\n    }\r\n    onSubmit={(values, actions) =>{\r\n      console.log(values)\r\n      axios.post(\"/usuarios\",values)\r\n      .then(res => {console.log(res);\r\n      if(res.status===200){\r\n      toast.success(\"Te has resgistrado correctamente\",{duration:2500})\r\n      const login = {email: values.email_usuario,contraseña: values.contraseña_usuario}\r\n      axios.post(\"/login\",login,{ headers: {\"x-access-token\" : `${res.data.token}`} })\r\n      .then(res=>{\r\n        console.log(res)\r\n        toast.success(\"Has iniciado sesion correctamente\",{duration:2500})\r\n        localStorage.setItem(\"TokenUsuario\",res.data.token)\r\n        localStorage.setItem(\"IdUsuario\",res.data.id.id)\r\n        const objeto = {}\r\n        localStorage.setItem(\"Carrito\",JSON.stringify(objeto))\r\n        console.log(JSON.parse(localStorage.getItem(\"Carrito\")))\r\n        navigate(\"/\")\r\n      })\r\n      .catch(error=>{toast.error(error)})\r\n      }else{\r\n        toast.error(\"Algo salio mal\")\r\n      }})\r\n      .catch(error => {\r\n        toast.error(\"El correo electronico o el numero de telefonos ya estan registrados en otra cuenta\")\r\n        console.log(error)}\r\n        )\r\n\r\n    }}\r\n      >\r\n\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}